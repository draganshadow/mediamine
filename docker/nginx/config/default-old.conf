server {
    listen 80 default; ## listen for ipv4; this line is default and implied
    listen [::]:80 default ipv6only=on; ## listen for ipv6

    # Make site accessible from http://localhost/ or server IP-address
    server_name localhost;
    server_name_in_redirect off;

    charset utf-8;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    root /app/src/web;
    index index.php index.html index.htm;

    location / {
        # First attempt to serve request as file, then
        # as directory, then trigger 404
        try_files $uri @rewriteapp;
        #try_files $uri $uri/ =404;
    }

    location @rewriteapp {
        # Ici on réécrit toutes les URL de telle sorte qu'elles pointent vers
        # le fichier app.php
        # Dans mon cas, mon installation était pour un environnement de
        # développement, j'ai donc remplacer app.php par app_dev.php
        rewrite ^(.*)$ /app.php/$1 last;
    }

    location ~ ^/(app|app_dev|config)\.php(/|$) {
        #try_files $uri =404;
        fastcgi_pass unix:/var/run/php5-fpm/www.socket;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
        include fastcgi_params;
    }

    # pass the PHP scripts to FPM socket
    #location ~ \.php$ {
    #    try_files $uri =404;

    #    fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

    #    fastcgi_pass php;

    #    fastcgi_index index.php;

    #    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #    fastcgi_param DOCUMENT_ROOT $document_root;

        # send bad requests to 404
    #    fastcgi_intercept_errors on;

    #    include fastcgi_params;
    #}
}